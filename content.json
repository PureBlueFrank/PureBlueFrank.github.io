[{"title":"戴尔卡耐基《人性的弱点》","date":"2019-10-17T02:08:09.000Z","path":"2019/10/17/戴尔卡耐基《人性的弱点》/","text":"你若读过卡耐基的书，就应该明白卡耐基所宣扬的成功，并不是指身份上的加官进爵、财富上的富可敌国，而是心灵内在的平静和满足、社会关系的和谐和健全。 所以，我觉得称卡耐基为“成人教育之父”、心灵导师可能更加合适。当然你可能觉得这不过是成功学的一种好听说法罢了，那么好吧，我建议你放下成见，去图书馆翻翻这本书，它绝对不会给你打鸡血，它会用简单的语句和故事告诉你，如何与人为善，如何宽恕自己。 其实，卡耐基的思想体系是一个集演讲术、推销术、人际关系及实用心理学的大综合，旨在帮助提升人们的表达能力、领导能力、社交能力、抗压能力，以下是我的初步总结，供你参考。 1、口才1.1 要素（1）心理① 战胜恐惧心理：首先，找到恐惧的根源（害怕出丑、未知&amp;不确定）；其次，“知识是医治恐惧”，做充分准备（资料、心理），提高心理承受能力，降低恐惧感。② 培养自信心：深呼吸；把自己想象成债主、观众欠你钱；自我暗示能够成功。③ 积极的心理暗示：目标高低带来的心理暗示直接决定了我们行为能力的大小。④ 回想成功经验，或把自己想象成其他人。（2）行动① 不断练习，不放过每个锻炼机会：聚会、开会等场合命令自己站起来说话，培养冒险精神。② 树立成功信念，不抱怨，愈挫愈勇。 1.2 技巧（1）如何指出别人的错误？① 尊重别人，不当面指正他人错误：柏拉图：当你在教导他人时，不要使他发现自己在被教导；指出人们所不知的事情时，要使他感到那只是提醒他一时忽略了的事情。② 间接指出别人的错误：不说“但是”，不要附加转折，改成“如果”、“而且”③ 批评前先自我批评（2）如何说服他人？① 坦承错误，以退为进掌握主动权：承认对方绝对正确，站在对方立场为他人说话，对方也会反过来为你说话。用争夺的方法，你永远得不到满足；但用让步的方法，你可能得到比你所期望的更多。② 心理引导，始终让对方做出肯定回答：交谈开始不要谈有分歧的事情，应先强调你们都同意的事情，并需要不断强调，强调双方在追求同一目标，即使分歧也是方法上的，不是目标上的。③ 保持谦卑，向别人请教，尊重他人建议，让对方觉得是自己的主意： 江海所以能为百谷王者，以其善下之，故能为百谷王。④ 换位思考：想想“如何才能使对方心甘情愿的去做”，即要站在对方立场上思考问题⑤ 建立信任感：微笑or承认错误⑥ 巧妙设问，引领思路，掌握话语主动权⑦ 修辞手法，增强说服力：比喻（用对方熟悉的东西）、夸张、引用、反问、对比等（3）如何提出建议？① 建议前先称赞② 用请求、建议、商量、赞美、提问的方式替代直接命令，保全他人的面子 1.3 风格（1）声音：音量、音调、语速（2）语调：语气和声调的变化结合，表达了话语中包含的情感，就像说话者的表情，传达言外之意的感染力（3）节奏：语速的快慢、音调的轻重、内容的繁简（4）非语言信息：面部表情、肢体动作。在台上时，忘记自己的手，自然下垂在身体两侧，那是最好的姿态。 1.4 演讲（1）用于自己相关的素材（2）说话充满激情、热情：有实际经验、有深刻思考，自然会有激情（3）以听众为中心，激起共鸣（4）与听众互动，打破和听众之间的墙（5）公式：生动的讲故事——清晰表达观点——强调如何行动（6）轻松自然的态度讲话，听众不会留意他的神态，而只感知到了他演讲的题材（7）开场白：主题句作为开场第一句话，十分有力 2、人际关系2.1 原则（1）管住舌头：筛选信息的三个筛子，真实、善意、重要。（2）换位思考：① 找到理解他人行为和人格的钥匙，多理解，少责备；② 找到对方的需求，激发对方的渴望和行动。“我一点也不奇怪你有这种感觉，如果我是你，也会与你的感觉一样” (3)与人为善① 真诚的关心他人，发自内心喜欢对方：培育为他人服务，不求回报的精神。② 尊重他人，对他人表示敬意。“一滴蜂蜜要比一加仑胆汁招引更多苍蝇”“温和、友善永远强过激烈与狂暴”《伊索寓言》风和太阳比赛脱衣服的故事③ 对他人感兴趣，迎合他人的兴趣：谈论对方感兴趣的话题。④ 不要为了自我满足而批评他人。⑤ 诚于嘉许、宽于称道：称赞别人，激励进步；赞美、重视、鼓励对方，让他觉得自己很重要，满足人类的重要性心理需求；记住对方姓名并喊出来。⑥ 做好倾听者：静听是最好的恭维。⑦ 微笑感染他人：非笑莫开店。 (4）给人以美名，并使之努力保全：给他人戴高帽，好像他们已经具有了某项美德。2.2 家庭（1）切勿批评、喋喋不休，时刻感谢、赞美、欣赏。（2）不要试图改造对方，不要干涉他们自己快乐的特殊方法。（3）注重生活中的小事，如生日、纪念日。（4）要有礼貌。（5）慷慨、关心；注重仪表；做坚强后盾；分享嗜好；表达爱意。 3、自我管理（幸福快乐追求之道）（1）对自己① 控制思想：人的思想（意识）具有极高重要性，它决定人的感觉、情绪、行为、健康。“战胜自己的心灵比攻占一个城市还要伟大”。② 控制行为：利用“假装”的行为去反作用于思想，然后真的变成想要的那样。③ 保持自我本色。④ 养成良好的工作习惯。⑤ 学会放松，解除疲劳。忧虑、紧张、心乱才是导致疲劳的三大原因。情绪上的倦怠感比生理上的操劳更易使人产生疲倦。工作并不是疲劳产生的根源，而是你觉得只要感到疲劳的工作才是努力的工作。不以疲劳程度衡量工作绩效，而用不累的程度去衡量。应该学会在工作的时候让自己放松，用游戏的心态去面对工作，制造乐趣。⑥ 活在当下：集中所有的智慧、热诚，把今天的工作做得尽善尽美，是迎接未来的唯一办法。⑦ 思恩：多盘点我们所拥有的，少去想那些我们所缺失的。“我正因为没有鞋子而难过，而忽然遇见一个没有双脚的人”。⑧ 学会自我批评：每日、每周进行总结、反省，不断战胜自己的缺点、弱点。⑨ 克服忧虑的方法：运动、阅读、忙碌的工作、视野拉长去看待问题。 （2）对他人① 不要对敌人心存报复：仇恨的怒火，将烧伤你自己。每晚睡觉前，原谅所有的人与事。② 不要指望别人感激你：只享受付出、施予的快乐。③ 忽略恶意责难，一笑了之。 （3）对事情① 负债转化为资产，坏事变成好事，从损失中获利。不要为打翻的牛奶哭泣。② 接受不可改变的事实，采取积极行动战胜困境，切勿忧虑。忧虑大半是因为人们没有足够的知识来做决定而产生的。如果我们将忧虑的时间，用来寻找解决问题的答案，那忧虑就会在我们智慧的光芒下消失。③ 生命苦短，不要为小事而烦恼。④ 专注于快乐，而非对错。⑤ 对世界充满友善、健康的兴趣。","tags":[{"name":"心理","slug":"心理","permalink":"https://PureBlueFrank.github.io/tags/心理/"}]},{"title":"iveiw admin 2.0实战心得","date":"2019-10-16T02:20:58.000Z","path":"2019/10/16/iveiw admin 2.0实战心得/","text":"前言：iview admin是基于Vue.js和iview组件库的开发的后台管理系统，基于它可以快速搭建一套UI简介、排版清晰的后台管理系统iveiw admin介绍和代码nodejs介绍iview组件 1 核心文件1.1 src/main.js12345678910111213141516171819202122232425262728293031323334// The Vue build version to load with the `import` command// (runtime-only or standalone) has been set in webpack.base.conf with an alias.import Vue from &apos;vue&apos;import App from &apos;./App&apos;import router from &apos;./router&apos;import store from &apos;./store&apos;import iView from &apos;iview&apos;import i18n from &apos;@/locale&apos;import importDirective from &apos;@/directive&apos;import axios from &apos;@/libs/axios&apos;// import &apos;iview/dist/styles/iview.css&apos;import &apos;@/assets/icons/iconfont.css&apos;import &apos;./index.less&apos;Vue.use(iView, &#123; i18n: (key, value) =&gt; i18n.t(key, value)&#125;) //国际化Vue.config.productionTip = falseObject.defineProperty(Vue.prototype, &apos;$get&apos;, &#123; value: axios.get &#125;) //全局自定义Object.defineProperty(Vue.prototype, &apos;$post&apos;, &#123; value: axios.post &#125;)/** * 注册vue指令 */importDirective(Vue)if (process.env.NODE_ENV !== &apos;production&apos;) require(&apos;@/mock&apos;)/* eslint-disable no-new */new Vue(&#123; el: &apos;#app&apos;, router, i18n, store, render: h =&gt; h(App)&#125;) 1.1.1 国际化 123Vue.use(iView, &#123; i18n: (key, value) =&gt; i18n.t(key, value)&#125;) //国际化 1.1.2 全局自定义 12Object.defineProperty(Vue.prototype, &apos;$get&apos;, &#123; value: axios.get &#125;) //全局自定义Object.defineProperty(Vue.prototype, &apos;$post&apos;, &#123; value: axios.post &#125;) 1.1.3 注册vue指令 1importDirective(Vue) 1.1.4 mock数据mock数据模拟 1if (process.env.NODE_ENV !== &apos;production&apos;) require(&apos;@/mock&apos;) //根据环境mock 具体mock的路由在src/mock/index.js中1.1.5 加载vue页面入口 1234567new Vue(&#123; el: &apos;#app&apos;, router, i18n, store, render: h =&gt; h(App)&#125;) 1.2 路由src/router详细参考下面文档vue router介绍vue-router hash和history模式vue router api 1.2.1 路由入口index.js每次路由跳转都会首先走到index.js代码中，这里面定义了路由模式以及路由前后的处理 123456789101112131415161718192021222324252627282930import Vue from &apos;vue&apos;import Router from &apos;vue-router&apos;import routes from &apos;./routers&apos;import store from &apos;@/store&apos;import iView from &apos;iview&apos;// import &#123; canTurnTo &#125; from &apos;@/libs/util&apos;Vue.use(Router)const router = new Router(&#123; routes, mode: &apos;history&apos;&#125;) //路由模式router.beforeEach((to, from, next) =&gt; &#123; iView.LoadingBar.start() store.dispatch(&apos;getUserInfo&apos;).then(user =&gt; &#123; console.log(user) next() // 拉取用户信息，通过用户权限和跳转的页面的name来判断是否有权限访问;access必须是一个数组，如：[&apos;super_admin&apos;] [&apos;super_admin&apos;, &apos;admin&apos;] // if (canTurnTo(to.name, user.access, routes)) next() // 有权限，可访问 // else next(&#123; replace: true, name: &apos;error_401&apos; &#125;) // 无权限，重定向到401页面 &#125;)&#125;) //路由跳转前一些公共处理router.afterEach(to =&gt; &#123; iView.LoadingBar.finish() window.scrollTo(0, 0)&#125;) //路由加载页面后一些公共处理export default router 1.2.1 路由具体配置router.jsrouter.js文件中定义了个人uri路由对应前端加载渲染的vue组件前端页面。以及多级菜单的结构import Main from &apos;@/components/main&apos;import parentView from &apos;@/components/parent-view&apos;/** * iview-admin中meta除了原生参数外可配置的参数: * meta: &#123; * title: &#123; String|Number|Function &#125; * 显示在侧边栏、面包屑和标签栏的文字 * 使用&apos;&#123;&#123; 多语言字段 &#125;&#125;&apos;形式结合多语言使用，例子看多语言的路由配置; * 可以传入一个回调函数，参数是当前路由对象，例子看动态路由和带参路由 * hideInBread: (false) 设为true后此级路由将不会出现在面包屑中，示例看QQ群路由配置 * hideInMenu: (false) 设为true后在左侧菜单不会显示该页面选项 * notCache: (false) 设为true后页面在切换标签后不会缓存，如果需要缓存，无需设置这个字段，而且需要设置页面组件name属性和路由配置的name一致 * access: (null) 可访问该页面的权限数组，当前路由设置的权限会影响子路由 * icon: (-) 该页面在左侧菜单、面包屑和标签导航处显示的图标，如果是自定义图标，需要在图标名称前加下划线&apos;_&apos; * beforeCloseName: (-) 设置该字段，则在关闭当前tab页时会去&apos;@/router/before-close.js&apos;里寻找该字段名对应的方法，作为关闭前的钩子函数 * &#125; */export default [ &#123; path: &apos;/login&apos;, name: &apos;login&apos;, meta: &#123; title: &apos;Login - 登录&apos;, hideInMenu: true &#125;, component: () =&gt; import(&apos;@/view/login/login.vue&apos;) &#125;, &#123; path: &apos;/&apos;, name: &apos;_home&apos;, redirect: &apos;/home&apos;, component: Main, meta: &#123; hideInMenu: true, notCache: true &#125;, children: [ &#123; path: &apos;/home&apos;, name: &apos;home&apos;, meta: &#123; hideInMenu: true, title: &apos;首页&apos;, notCache: true, icon: &apos;md-home&apos; &#125;, component: () =&gt; import(&apos;@/view/single-page/home&apos;) &#125; ] &#125;, &#123; path: &apos;&apos;, name: &apos;doc&apos;, meta: &#123; title: &apos;文档&apos;, href: &apos;https://lison16.github.io/iview-admin-doc/#/&apos;, icon: &apos;ios-book&apos; &#125; &#125;, &#123; path: &apos;/join&apos;, name: &apos;join&apos;, component: Main, meta: &#123; hideInBread: true &#125;, children: [ &#123; path: &apos;join_page&apos;, name: &apos;join_page&apos;, meta: &#123; icon: &apos;_qq&apos;, title: &apos;QQ群&apos; &#125;, component: () =&gt; import(&apos;@/view/join-page.vue&apos;) &#125; ] &#125;, &#123; path: &apos;/message&apos;, name: &apos;message&apos;, component: Main, meta: &#123; hideInBread: true, hideInMenu: true &#125;, children: [ &#123; path: &apos;message_page&apos;, name: &apos;message_page&apos;, meta: &#123; icon: &apos;md-notifications&apos;, title: &apos;消息中心&apos; &#125;, component: () =&gt; import(&apos;@/view/single-page/message/index.vue&apos;) &#125; ] &#125;, &#123; path: &apos;/components&apos;, name: &apos;components&apos;, meta: &#123; icon: &apos;logo-buffer&apos;, title: &apos;组件&apos; &#125;, component: Main, children: [ &#123; path: &apos;tree_select_page&apos;, name: &apos;tree_select_page&apos;, meta: &#123; icon: &apos;md-arrow-dropdown-circle&apos;, title: &apos;树状下拉选择器&apos; &#125;, component: () =&gt; import(&apos;@/view/components/tree-select/index.vue&apos;) &#125;, &#123; path: &apos;count_to_page&apos;, name: &apos;count_to_page&apos;, meta: &#123; icon: &apos;md-trending-up&apos;, title: &apos;数字渐变&apos; &#125;, component: () =&gt; import(&apos;@/view/components/count-to/count-to.vue&apos;) &#125;, &#123; path: &apos;drag_list_page&apos;, name: &apos;drag_list_page&apos;, meta: &#123; icon: &apos;ios-infinite&apos;, title: &apos;拖拽列表&apos; &#125;, component: () =&gt; import(&apos;@/view/components/drag-list/drag-list.vue&apos;) &#125;, &#123; path: &apos;drag_drawer_page&apos;, name: &apos;drag_drawer_page&apos;, meta: &#123; icon: &apos;md-list&apos;, title: &apos;可拖拽抽屉&apos; &#125;, component: () =&gt; import(&apos;@/view/components/drag-drawer&apos;) &#125;, &#123; path: &apos;org_tree_page&apos;, name: &apos;org_tree_page&apos;, meta: &#123; icon: &apos;ios-people&apos;, title: &apos;组织结构树&apos; &#125;, component: () =&gt; import(&apos;@/view/components/org-tree&apos;) &#125;, &#123; path: &apos;tree_table_page&apos;, name: &apos;tree_table_page&apos;, meta: &#123; icon: &apos;md-git-branch&apos;, title: &apos;树状表格&apos; &#125;, component: () =&gt; import(&apos;@/view/components/tree-table/index.vue&apos;) &#125;, &#123; path: &apos;cropper_page&apos;, name: &apos;cropper_page&apos;, meta: &#123; icon: &apos;md-crop&apos;, title: &apos;图片裁剪&apos; &#125;, component: () =&gt; import(&apos;@/view/components/cropper/cropper.vue&apos;) &#125;, &#123; path: &apos;tables_page&apos;, name: &apos;tables_page&apos;, meta: &#123; icon: &apos;md-grid&apos;, title: &apos;多功能表格&apos; &#125;, component: () =&gt; import(&apos;@/view/components/tables/tables.vue&apos;) &#125;, &#123; path: &apos;split_pane_page&apos;, name: &apos;split_pane_page&apos;, meta: &#123; icon: &apos;md-pause&apos;, title: &apos;分割窗口&apos; &#125;, component: () =&gt; import(&apos;@/view/components/split-pane/split-pane.vue&apos;) &#125;, &#123; path: &apos;markdown_page&apos;, name: &apos;markdown_page&apos;, meta: &#123; icon: &apos;logo-markdown&apos;, title: &apos;Markdown编辑器&apos; &#125;, component: () =&gt; import(&apos;@/view/components/markdown/markdown.vue&apos;) &#125;, &#123; path: &apos;editor_page&apos;, name: &apos;editor_page&apos;, meta: &#123; icon: &apos;ios-create&apos;, title: &apos;富文本编辑器&apos; &#125;, component: () =&gt; import(&apos;@/view/components/editor/editor.vue&apos;) &#125;, &#123; path: &apos;icons_page&apos;, name: &apos;icons_page&apos;, meta: &#123; icon: &apos;_bear&apos;, title: &apos;自定义图标&apos; &#125;, component: () =&gt; import(&apos;@/view/components/icons/icons.vue&apos;) &#125; ] &#125;, &#123; path: &apos;/update&apos;, name: &apos;update&apos;, meta: &#123; icon: &apos;md-cloud-upload&apos;, title: &apos;数据上传&apos; &#125;, component: Main, children: [ &#123; path: &apos;update_table_page&apos;, name: &apos;update_table_page&apos;, meta: &#123; icon: &apos;ios-document&apos;, title: &apos;上传Csv&apos; &#125;, component: () =&gt; import(&apos;@/view/update/update-table.vue&apos;) &#125;, &#123; path: &apos;update_paste_page&apos;, name: &apos;update_paste_page&apos;, meta: &#123; icon: &apos;md-clipboard&apos;, title: &apos;粘贴表格数据&apos; &#125;, component: () =&gt; import(&apos;@/view/update/update-paste.vue&apos;) &#125; ] &#125;, &#123; path: &apos;/excel&apos;, name: &apos;excel&apos;, meta: &#123; icon: &apos;ios-stats&apos;, title: &apos;EXCEL导入导出&apos; &#125;, component: Main, children: [ &#123; path: &apos;upload-excel&apos;, name: &apos;upload-excel&apos;, meta: &#123; icon: &apos;md-add&apos;, title: &apos;导入EXCEL&apos; &#125;, component: () =&gt; import(&apos;@/view/excel/upload-excel.vue&apos;) &#125;, &#123; path: &apos;export-excel&apos;, name: &apos;export-excel&apos;, meta: &#123; icon: &apos;md-download&apos;, title: &apos;导出EXCEL&apos; &#125;, component: () =&gt; import(&apos;@/view/excel/export-excel.vue&apos;) &#125; ] &#125;, &#123; path: &apos;/tools_methods&apos;, name: &apos;tools_methods&apos;, meta: &#123; hideInBread: true &#125;, component: Main, children: [ &#123; path: &apos;tools_methods_page&apos;, name: &apos;tools_methods_page&apos;, meta: &#123; icon: &apos;ios-hammer&apos;, title: &apos;工具方法&apos;, beforeCloseName: &apos;before_close_normal&apos; &#125;, component: () =&gt; import(&apos;@/view/tools-methods/tools-methods.vue&apos;) &#125; ] &#125;, &#123; path: &apos;/i18n&apos;, name: &apos;i18n&apos;, meta: &#123; hideInBread: true &#125;, component: Main, children: [ &#123; path: &apos;i18n_page&apos;, name: &apos;i18n_page&apos;, meta: &#123; icon: &apos;md-planet&apos;, title: &apos;i18n - &#123;&#123; i18n_page &#125;&#125;&apos; &#125;, component: () =&gt; import(&apos;@/view/i18n/i18n-page.vue&apos;) &#125; ] &#125;, &#123; path: &apos;/error_store&apos;, name: &apos;error_store&apos;, meta: &#123; hideInBread: true &#125;, component: Main, children: [ &#123; path: &apos;error_store_page&apos;, name: &apos;error_store_page&apos;, meta: &#123; icon: &apos;ios-bug&apos;, title: &apos;错误收集&apos; &#125;, component: () =&gt; import(&apos;@/view/error-store/error-store.vue&apos;) &#125; ] &#125;, &#123; path: &apos;/error_logger&apos;, name: &apos;error_logger&apos;, meta: &#123; hideInBread: true, hideInMenu: true &#125;, component: Main, children: [ &#123; path: &apos;error_logger_page&apos;, name: &apos;error_logger_page&apos;, meta: &#123; icon: &apos;ios-bug&apos;, title: &apos;错误收集&apos; &#125;, component: () =&gt; import(&apos;@/view/single-page/error-logger.vue&apos;) &#125; ] &#125;, &#123; path: &apos;/directive&apos;, name: &apos;directive&apos;, meta: &#123; hideInBread: true &#125;, component: Main, children: [ &#123; path: &apos;directive_page&apos;, name: &apos;directive_page&apos;, meta: &#123; icon: &apos;ios-navigate&apos;, title: &apos;指令&apos; &#125;, component: () =&gt; import(&apos;@/view/directive/directive.vue&apos;) &#125; ] &#125;, &#123; path: &apos;/multilevel&apos;, name: &apos;multilevel&apos;, meta: &#123; icon: &apos;md-menu&apos;, title: &apos;多级菜单&apos; &#125;, component: Main, children: [ &#123; path: &apos;level_2_1&apos;, name: &apos;level_2_1&apos;, meta: &#123; icon: &apos;md-funnel&apos;, title: &apos;二级-1&apos; &#125;, component: () =&gt; import(&apos;@/view/multilevel/level-2-1.vue&apos;) &#125;, &#123; path: &apos;level_2_2&apos;, name: &apos;level_2_2&apos;, meta: &#123; access: [&apos;super_admin&apos;], icon: &apos;md-funnel&apos;, showAlways: true, title: &apos;二级-2&apos; &#125;, component: parentView, children: [ &#123; path: &apos;level_2_2_1&apos;, name: &apos;level_2_2_1&apos;, meta: &#123; icon: &apos;md-funnel&apos;, title: &apos;三级&apos; &#125;, component: () =&gt; import(&apos;@/view/multilevel/level-2-2/level-2-2-1.vue&apos;) &#125;, &#123; path: &apos;level_2_2_2&apos;, name: &apos;level_2_2_2&apos;, meta: &#123; icon: &apos;md-funnel&apos;, title: &apos;三级&apos; &#125;, component: () =&gt; import(&apos;@/view/multilevel/level-2-2/level-2-2-2.vue&apos;) &#125; ] &#125;, &#123; path: &apos;level_2_3&apos;, name: &apos;level_2_3&apos;, meta: &#123; icon: &apos;md-funnel&apos;, title: &apos;二级-3&apos; &#125;, component: () =&gt; import(&apos;@/view/multilevel/level-2-3.vue&apos;) &#125; ] &#125;, &#123; path: &apos;/argu&apos;, name: &apos;argu&apos;, meta: &#123; hideInMenu: true &#125;, component: Main, children: [ &#123; path: &apos;params/:id&apos;, name: &apos;params&apos;, meta: &#123; icon: &apos;md-flower&apos;, title: route =&gt; `&#123;&#123; params &#125;&#125;-$&#123;route.params.id&#125;`, notCache: true, beforeCloseName: &apos;before_close_normal&apos; &#125;, component: () =&gt; import(&apos;@/view/argu-page/params.vue&apos;) &#125;, &#123; path: &apos;query&apos;, name: &apos;query&apos;, meta: &#123; icon: &apos;md-flower&apos;, title: route =&gt; `&#123;&#123; query &#125;&#125;-$&#123;route.query.id&#125;`, notCache: true &#125;, component: () =&gt; import(&apos;@/view/argu-page/query.vue&apos;) &#125; ] &#125;, &#123; path: &apos;/401&apos;, name: &apos;error_401&apos;, meta: &#123; hideInMenu: true &#125;, component: () =&gt; import(&apos;@/view/error-page/401.vue&apos;) &#125;, &#123; path: &apos;/500&apos;, name: &apos;error_500&apos;, meta: &#123; hideInMenu: true &#125;, component: () =&gt; import(&apos;@/view/error-page/500.vue&apos;) &#125;, &#123; path: &apos;*&apos;, name: &apos;error_404&apos;, meta: &#123; hideInMenu: true &#125;, component: () =&gt; import(&apos;@/view/error-page/404.vue&apos;) &#125;] 1.3 配置src/config1.4 静态资源src/asset1.5 后端接口调用或者mock接口src/api资源iView资源：https://www.iviewui.com/docs/guide/install 路由vue router介绍：https://router.vuejs.org/zh/guide/#javascriptvue-router hash和history模式：https://juejin.im/post/5a61908c6fb9a01c9064f20avue router api:https://router.vuejs.org/zh/api/#router-link 语法vue.js:https://lison16.github.io/iview-admin-doc/#/%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B 打包webpack：https://www.webpackjs.com/concepts/ 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586&apos;use strict&apos;const path = require(&apos;path&apos;)const utils = require(&apos;./utils&apos;)const config = require(&apos;../config&apos;)const vueLoaderConfig = require(&apos;./vue-loader.conf&apos;)function resolve (dir) &#123; return path.join(__dirname, &apos;..&apos;, dir)&#125;const createLintingRule = () =&gt; (&#123;&#125;)module.exports = &#123; context: path.resolve(__dirname, &apos;../&apos;), entry: &#123; app: &apos;./src/main.js&apos; &#125;, output: &#123; path: config.build.assetsRoot, filename: &apos;[name].js&apos;, publicPath: process.env.NODE_ENV === &apos;production&apos; ? config.build.assetsPublicPath : config.dev.assetsPublicPath &#125;, resolve: &#123; extensions: [&apos;.js&apos;, &apos;.vue&apos;, &apos;.json&apos;], alias: &#123; &apos;vue$&apos;: &apos;vue/dist/vue.esm.js&apos;, &apos;@&apos;: resolve(&apos;src&apos;), &apos;_c&apos;: resolve(&apos;src/components&apos;), &apos;_conf&apos;: resolve(&apos;config&apos;) &#125; &#125;, module: &#123; rules: [ ...(config.dev.useEslint ? [createLintingRule()] : []), &#123; test: /\\.vue$/, loader: &apos;vue-loader&apos;, options: vueLoaderConfig &#125;, &#123; test: /\\.js$/, loader: &apos;babel-loader&apos;, include: [resolve(&apos;src&apos;), resolve(&apos;test&apos;), resolve(&apos;node_modules/webpack-dev-server/client&apos;)] &#125;, &#123; test: /\\.(png|jpe?g|gif|svg)(\\?.*)?$/, loader: &apos;url-loader&apos;, options: &#123; limit: 10000, name: utils.assetsPath(&apos;img/[name].[hash:7].[ext]&apos;) &#125; &#125;, &#123; test: /\\.(mp4|webm|ogg|mp3|wav|flac|aac)(\\?.*)?$/, loader: &apos;url-loader&apos;, options: &#123; limit: 10000, name: utils.assetsPath(&apos;media/[name].[hash:7].[ext]&apos;) &#125; &#125;, &#123; test: /\\.(woff2?|eot|ttf|otf)(\\?.*)?$/, loader: &apos;url-loader&apos;, options: &#123; limit: 10000, name: utils.assetsPath(&apos;fonts/[name].[hash:7].[ext]&apos;) &#125; &#125; ] &#125;, node: &#123; // prevent webpack from injecting useless setImmediate polyfill because Vue // source contains it (although only uses it if it&apos;s native). setImmediate: false, // prevent webpack from injecting mocks to Node native modules // that does not make sense for the client dgram: &apos;empty&apos;, fs: &apos;empty&apos;, net: &apos;empty&apos;, tls: &apos;empty&apos;, child_process: &apos;empty&apos; &#125;&#125; webpack全局定义路径别名 123456789resolve: &#123; extensions: [&apos;.js&apos;, &apos;.vue&apos;, &apos;.json&apos;], alias: &#123; &apos;vue$&apos;: &apos;vue/dist/vue.esm.js&apos;, &apos;@&apos;: resolve(&apos;src&apos;), &apos;_c&apos;: resolve(&apos;src/components&apos;), &apos;_conf&apos;: resolve(&apos;config&apos;) &#125;&#125;, 请求Axios：https://www.kancloud.cn/yunye/axios/234845 Promisehttp://liubin.org/promises-book/ 脚本解析器nodejs：https://nqdeng.github.io/7-days-nodejs/#1.1https://www.runoob.com/nodejs/nodejs-tutorial.html 包管理npm介绍：https://www.runoob.com/nodejs/nodejs-npm.htmlnpm仓库：https://www.npmjs.com/","tags":[{"name":"前端","slug":"前端","permalink":"https://PureBlueFrank.github.io/tags/前端/"}]},{"title":"关于房价我的一点看法","date":"2019-10-16T02:05:47.000Z","path":"2019/10/16/关于房价我的一点看法/","text":"预测： 20190713黄奇帆万字长文预测房地产下一步 结论： 未来房价增长率大体等于GDP增长率+物价增长率，要低于居民收入增长率,房价整体保持平稳不会大涨大跌 支持依据1、流通资金严控：M2(广义货币)的增长率大体上等于GDP的增长率加物价指数 2、供求关系基于平衡：城市化率目前60%未来十几年增长到70%，城市人口增加没有过去二十年多了；现在城市人均面积已经50平米 3、房产开发规范(去负债率)：房产开发土地批租资金严控(房产商买地的钱得自己掏，银行严管贷款)；预售规范(封顶、精装开始后才能预售)、施工单位长期垫资的现象也会管制到位(房产商建房的钱)–打击投机倒把地产商 4、城市土地供应模式改革：城乡土地一体化会在将来10年更深进一步展开，大城市可以以类似地票的形式向国土资源部购买土地增加城市土地供给 过往现象解释1、15年底16年初上海房价高位上涨是M2调控的先兆。这波上涨应该是上海将来十几年最后一波大涨（M2在2017年、2018年都是八点几，中央宏观政策去杠杆、稳金融、去库存） 2、最近一年不管内地还是香港(中国房地产发源地)的知名房地产富豪，多次被官媒点名批评 3、农村土地确权工作已经在农村全面执行，真正目的城乡土地一体化，增加城市土地供给，扩大农村耕地面积 行动指南1、如果没结婚非刚需不要急于买房，不要被世俗绑架 2、如果要买房，房子要跟着工作机会走(一线城市或者新一线城市) 3、不要进行任何与房地产行业有关的投资 4、农村老旧宅基地保留 相关视频： https://www.youtube.com/watch?v=osqrzy5rpnA https://www.youtube.com/watch?v=X-4Y04j5z4g","tags":[{"name":"房价","slug":"房价","permalink":"https://PureBlueFrank.github.io/tags/房价/"}]},{"title":"20190713黄奇帆万字长文预测房地产下一步","date":"2019-10-16T01:56:26.000Z","path":"2019/10/16/20190713黄奇帆万字长文预测房地产下一步/","text":"01房地产的市场规模今后十几年新房的销售交易量会有一个比较大的下降，这个变化就是从这几年的顶点到了拐点开始往下，趋势性的总量缩减。 我们回顾一下中国房地产这20年的总量是怎么增长的。在1998年和1999年的时候，中国房地产一年新建房的交易销售量刚刚达到1亿平方米。而在1990年之前，中国是没有商品房交易的，从1990年后开始有了房地产业，启动了开发商土地批租、老百姓买房可以按揭贷款等市场化改革，到1998年、1999年的时候达到了1亿平方米。随后，从1998年到2008年，这10年里涨了6倍，实际上原本可能涨到8倍， 2007年的销售量本来已经到了差不多7亿平方米，但2008年全球金融危机发生了，中国的房产交易量也下降了，萎缩到6亿平方米。又过了5年，到2012年前后，房地产的交易量翻了一番，从6亿平方米增长到12亿平方米。从2012年到2018年，又增加了5亿平方米。总之在过去的20年，中国房地产每年的新房销售交易量差不多从1亿平方米增长到17亿平方米，翻了四番多。 那么，今后的十几年会怎么走？是保持现状17亿平方米一年，维持10多年，还是继续每5年、10年还要翻一番，17亿平方米变成30亿平方米、34亿平方米？我的判断是今后十几年，中国每年的房地产新房的交易量不仅不会总量增长翻番，相反还会每年小比例地有所萎缩，或者零增长、或者负增长。十几年以后，每年房地产的新房销售交易量可能下降到10亿平方米以内，大体上减少40%的总量。 中国房地产业在过去20年房地产交易总量之所以能够翻四番，有四个原因： 一是城市化。在过去20年里，中国城市人口在增加。中国城市常住人口城市化率上升了近26个百分点，城市化过程中城市人口扩张，不仅是农民工进城市，还包括小城市的人到中城市、大城市、超大城市，人口在城市之间迁徙。城市规模的扩大带动了房地产业的增长。 二是旧城拆迁改造。在城市扩大的同时，为了交通道路建设、商务集聚区的建设，而拆除一些工厂区、住宅区，各种因规划功能布局调整进行城市改造，也能产生较大的新房建设销售交易量。 三是住房质量。中国人造房子，50年前的时候，农村是土坯房，城市是砖瓦房。上世纪八十年代以后，农村是砖瓦房，城市开始建造钢筋混凝土住房。土坯房一般不超过10年就会垮塌，需要重新造；砖瓦房一般15年到20年要重建。最初造的钢筋混凝土住房，由于水泥质量差、钢筋质量差、建筑结构差，到了30年基本上也要拆了重建。 四是人均住房面积增加。1990年，中国人均住房面积只有6平方米；到2000年，城市人均住房面积也仅十几平方米，现在城市人均住房面积已达到50平方米。原来人均住房面积偏小，也会产生改善性的购房需求。 以上四方面因素在今后十几年会逐渐淡出。一是城市化率增长放慢，已接近拐点。在未来十几年将从现在的60%大致增长到70%，总之，城市化率的上升面临天花板现象，城市人口增速放缓，还要每年增长一点几个百分点是不可能的，城市化的人口红利会逐步淡出。二是旧城改造总量减少。经过20年的城市改造，旧城改造大拆大建的状况会逐步淡出，总量会大规模减少。三是人均住房面积基本平衡不会再大幅增加。当前，我国人均住房面积已经达到50平方米，困难家庭住房结构性改善的要求逐渐降到较低水平。尽管还会有，但只是局部结构性的，而不是总体性的人均住房不够。四是住房质量提高。2012年，住建部下发了一个关于住宅和写字楼等各种商品性房屋的建筑质量标准，把原来中国住宅商品房30年左右的安全标准提升到了至少70年，甚至100年。也就是说，老城市的折旧改造量会大量减少。假设这个城市有10亿平方米的房子，如果按30年折旧计算，每年会折旧三十分之一，差不多3000万平方米要拆了重造。如果变成100年，每年的折旧平均也就变成1000万平方米。 从以上四个趋势看，在今后十几年的长周期里，中国房地产每年铺天盖地的十六七亿平方米的新房竣工销售交易量，这个时代结束了。去年比前年只增加了1.8%就是一个信号。今后十几年的房地产业发展趋势，不会是17亿、18亿、20亿、30亿平方米，而是逐渐萎缩，当然这个萎缩不会在一年里面大规模萎缩20%、30%，大体上有十几年的过程，逐步往下降。十几年后每年的竣工销售量下降到10亿平方米以下。 02总量萎缩后，房地产的热点、重点地区在哪里过去十几年的状态，不管是沿海发达地区，还是中西部地区；不管是大城市、中城市，还是小城市、区县城市，总之是全面开发，四面开花到处都是房地产，是个全民造房运动的时代。从现在开始，往后的十几年，房地产不会出现四面开花、东西南北中全面发热的状态，但是房地产还会有热点。我们说的总量17亿平方米一年，以后可能变为一年15亿、12亿平方米。这个建设量、生产量主要体现在三个热点地方。一个是中心城市。所谓中心城市，指除了省会城市之外也包括一些同等级别区域性的中心城市。比如，山东省除济南外，也有区域中心城市青岛；广东省除了广州之外还有同等级中心城市深圳。第二个就是大都市圈。超级大城市辐射会形成城市圈，城市圈里的那些中小城市会成为房地产发展热点。第三个热点地区是城市群。城市群里的大中型城市往往也会是今后十几年房地产开发的热点。 大家可以关注现在近10个跨入1000万的超级大城市，他们都有十几年以后人口增长500万以上的可能。只要人口增长了，城市住宅房地产就会跟上去。如果已经是2000万以上的超级大城市，这个超级大城市自身的核心圈已经碰天花板了，它的发展将集中表现在大都市圈，大都市圈的辐射范围一般会有1.5—2万平方公里。大都市圈里会有一些中小城市，这些中小城市，单独发展一般不构成热点，但一旦进入大都市圈发展，这些中小城市会加快发展。 03房价判断今后十几年，房价趋于稳定，既不会大涨，也不会大跌，房价的平均增长率将低于等于GDP的增长率。全国城市新开发房屋的平均交易价格1998年是每平方米2000元，2018年全国平均上涨到了8800元，大账上说的是翻了两番。如果当地比当地，那么不管是东部，还是西部，都翻了三番以上。比如，成都2000年主城房价均价1000多元，2017年到了10000元以上，翻了三番多。北京、上海、深圳、广州、南京、杭州等热点的一线城市房价基本上翻了三番，涨了八倍，有的特别热的地方甚至涨了十倍以上。在特别热的一线城市家庭收入30年、40年不吃不喝买不了一套房，房价收入比是很高的，与世界比较来说是最高的。过去十几年，中国的房价跟房地产的开发量、生产量是相同的趋势，都是五年翻一番、十年翻两番、十七八年翻三番的状态。 支持这个状态的原因是什么呢？大体上有三条： 第一个原因，就是供求关系。过去二十年，中国房地产是供不应求的，人均从10平方米往20、30、40平方米的这个过程是短缺经济下的补短板的过程，强烈的改善需求规模支撑它越造越多。在越造越多的过程中还供不应求，就造成房价不断往上涨。 第二个原因，房价上升当然和货币有关，通货膨胀是货币现象。中国的M2从2004年、2005年开始，差不多有整整十几年左右两位数增长，一年百分之十几的增长率，有若干年份甚至百分之二十几的增长。我们的M2今年6月份到了190多万亿，去年180多万亿。而在2004年的时候，M2其实就是20多万亿。也就是说，十几年，M2翻了三番，涨了8倍。这个钱出来当然会影响社会经济。被房地产吸收了一大块资金，房地产成了M2超出增长的一个吸收器，使得整个社会商品的物价指数增长平稳，但房价出现了每三年、每五年翻一番的现象，这些年房价上升，也是通货膨胀的现象。 第三个原因，一个国家房地产的价格也会受外部影响、受汇率影响、受国际购买力影响，当然也会受国际经济危机的冲击。中国经济增长的过程，会吸引外资投资或购买中国的房地产。 根据这个预测未来，在房地产供求关系方面，我们已经进入到尽管局部还会有供不应求，但总体来看，供不应求的时代结束了，已经进入到总量过剩的阶段。所以，供不应求造成房价上升、推动房价上升的动力下降了。 从通货膨胀看，我国M2已经到了190万亿，会不会今后的10年M2再去翻两番？不可能，这两年国家去杠杆、稳金融已经做到了让M2的增长率大体上等于GDP的增长率加物价指数。这几年的GDP增长率百分之六点几，物价指数加两个点，所以M2在2017年、2018年都是八点几，今年1-6月份8.5，基本上是这样。可以预判，今后十几年，M2增长率基本上与GDP增长率加物价指数，保持均衡的增长。而中国的GDP今后十几年平均增长率大体在5%左右，房地产价格的增长大体上不会超过M2的增长率，大体上也不会超过GDP的增长率，一般会小于老百姓家庭收入的增长率。 总之，中国的城市化还在发展过程中，城市化率还有10%增长空间。城市群、大都市圈、国家中心城市、超级大城市还在发展中，中国不存在土地价格大幅下跌的可能性，中国房价不会出现大幅度的往下坠落；但也不会再产生五年翻一番、十年翻两番三番的那种历史性现象。今后十几年，房价会趋于平稳，既不会大跌，也不会大涨。 04房地产开发企业数量会减少三分之二以上中国房地产有一个现象就是房地产商、房地产开发企业的数量是世界之最。美国2018年50个洲的工商登记里，注册房地产开发的企业没有超过500个。中国有多少？根据2018年的统计，在工商局注册登记的房地产开发商一共9.7万个，中国5亿多的城市户籍人口加3亿左右外来的农民工形成的八亿多城市常住人口有九万多个房地产企业。 中国房地产商有三大特征：第一，房地产企业杂、散、小。大到上万亿规模，小到几百万规模。第二，层层叠叠。一个大房地产公司在某个省注册以后，要到各个省去开发，它会在二三十个省各注册一个省级开发公司。五大开发商不管是万科还是万达，几乎都有几百个子公司，层层叠叠。第三，空壳公司多。9万多个房产企业中，规模排在前面15%的公司，去年的开发量在17亿平方米里占了85%。也就是，15%的企业解决了差不多14亿多平方米，剩下的近8万个企业只干了2亿多平方米，大量的空壳公司。空壳公司在不景气的时候是空壳，一到狂热的时候就是乱集资、乱炒地、乱发展。这种现象是过去十几年粗放型发展的一个结果。 今后十几年，基于房地产业高质量转型要求和开发总量降低的趋势，房地产开发企业必然会有一个大幅度减量萎缩的过程。会减掉多少？我认为，至少会减掉三分之二，十几年后中国房地产开发企业的法人数不会超过3万个。 在房地产的调整发展中，会从四个轨道上缩小。第一个，房产企业收缩。超大型的房产商会把自己二级、三级、四级的房地产公司收缩，可能会把房地产的投资集中到省会城市、大都市圈、城市群，特别是超级大城市中的人口从1000万向2000万发展的城市，不会再在全国铺天盖地铺摊子搞行政性的分布，会在层次上收缩，子、孙公司总量上萎缩。第二个，工商年检注销。过去这些年，由于入市的时候门槛很低，入市不久即成空壳公司，工商年检的时候，又不退市注销，这是我们以前工商登记的一种状态。今后，年检通不过的就注销。第三个，房产企业转行。相当一部分房地产商在市场规模缩小、一些城市房地产业务衰退的情况下，会主动转行。第四个，收购兼并。 这四方面将构成房地产开发企业数量的大幅下降。 05房地产开发商的总体负债率将大幅下降中国房地产开发商的高负债率也是世界一最。中国9万多个房产商的总负债率，去年是84%。中国前10位销售规模都在1万亿左右的房产商负债率也在81%。整个中国房地产开发模式就是一个大规模基建、大规模贷款的开发模式，净资本极低，像贸易公司、流通公司一样在周转。表现在土地批租、开发建设、销售预售三个环节都是高负债运行。 首先是买地的钱，基本不靠自有资金，而是靠贷款融资。买地的钱，银行信托后面堆着，10个亿的地价拍卖成20个亿，后面跟着的是银行的钱，所以开发商能把“地王”炒上去，不受自己有没有钱的束缚，敢把地价炒得翻一番。地价炒得越高，开发商原有的储备地价值也越高，资产信用就更高，所以开发商对地价炒高，有恃无恐。这是一个现象，就是买地靠融资、靠贷款。 开发贷可以来自于银行、来自于信托，当然也可以来自于企业发债，债券还是一个债务。一些信用差的小房产商，借不到银行、信托的钱，也发不了债，就会搞乱集资、借高利贷、搞售后回租。所谓售后回租，就是房产商把房子卖了回租，租赁出租费每年15%，相当于高息揽储，实际上是房产商借高利贷搞开发。 再次是利用房地产掌盘优势套取客户的无息资金。比如，房屋预售，房子刚打地基就收定金，楼盘还没封顶就卖预售房；施工过程让施工方带资垫资施工，形成施工欠款，整个开发过程就是一个透支欠款的过程。 正是以上三类这样的一个运转透支模式，形成了中国开发商百分之八十几的负债率，开发商往往还把它当作自己财务运行能力强的一种成就。透支欠帐中，银行贷款是正常利息，信托一般比银行利息高一倍，乱集资的话17—18%的利息，在这个情况下，房产商要把这个资金链上的利息怎么平衡呢？卖楼花、拿定金、预售是不付利息的；还有一种就是让别人给你施工，让施工单位招投标的时候必须带资施工，不给利息。一个房产商可能负债里面有30%，甚至40%的钱是无息债务，房产商觉得赚了便宜。所有这种运行，在房地产正常、顺势向上、不会出现资金链断的时候，房产商会赚很多的钱。但是一旦逆周期发生，资金回笼不到位，资金链断了，高利息的负债会使他跳楼。很多房地产商出问题，出在逆周期、经济下行、房产销售各方面困难的时候，这种情况就像地雷一样的一个个爆炸，这样的现象是必须解决掉的。 我们去看全世界房地产商都不是这样的。香港房地产算中国房地产的发源地，但是香港房地产企业平均负债率一般在30%左右，它同样卖楼花，同样跟银行贷款，但是它有更多的自有资本，自己赚的利润放在里面形成的净资产有60%、70%。香港房地产商跑到内地来，是不是负债率变得很高呢？没有，整个香港房产商在内地的房地产法人，一般负债率也就在40%，没有出现我们所讲的80%。在这个意义上，我们房地产商要改变自己的行为。 在今后的十几年，新时代的房地产格局下，房地产企业高负债情况会发生根本的转变。一是土地批租债务。买地的钱来源会得到管控，国家15年前就有制度，房产商买土地，土地批租的钱必须是自有资本，但是这十几年几乎都没有监管到位。只要管控到位，一般炒地皮的钱不让金融机构进入的话，土地批租的高负债率就会减少。二是预售规范。房产生产到房屋结构封顶、楼盘开始精装修时才能开始预售，而不是刚打了一根桩就开始卖楼花，这样就会让无息的资金、预售款、按揭贷款来买房的现象会减少，房产商的债务率也会降低，透支的现象可以大大减少，对施工单位长期垫资的现象也会管制到位。三是经营模式转变。房地产开发从100%销售型开发转型为销售部分长租持有出租的模式时，也会出现资产负债率的降低。如果租赁型的企业不用资本的方式解决租赁，而是用长期贷款的高利息的方式来租赁，这边租赁的费用还不够还利息，资金链一断就会导致破产。如果租赁的资产采用了资本的形式，长期出租，租金又以REITs的方式参与直接融资，属于一种资本形态的运转，并且区别于商业银行贷款。这就解释了为什么香港有那么多的REITs企业。由此可见，中国房地产的经营模式、高债务模式必然在今后十几年得到彻底的改变，负债率一定会从80%降到50%以下，在40%-50%之间。 06土地供应模式我们过去供应土地东西南北中是逆向供应的，越是中小城市土地供应越宽松，但这些城市实际上的扩张需求又很低。我们有一种对城市规模的恐惧症，一般要求小城市离土不离乡。在这个意义上，支持小城镇发展、中等城市发展，一到500万人口以上就开始限制，一到1000万人口以上就封顶了。在这个意义上讲，土地供应的政策就出现了越是大城市、人口越多、建设量越大的地方土地供应越紧，当然地价就高。土地如果供不应求，地价就上升，一般楼面价是这个地方商品房价格的三分之一，如果楼面地价1万元∕平方米，这个房子造好后的一般价格必定是三四万一平方。所以要降低房价、控制房价，很重要的措施是要控制地价、降低地价，就要在高房价的地区增加城市土地的供应。今后十几年按照房地产高质量转型的发展要求，在城市土地价位上会根据“产业跟着规划走、人口跟着产业走、土地跟着人口和产业走”的原则来供应土地。 这样走的过程，我们可以用一个形容词叫做“爬行盯住”。走一步看一步，人口不是一步到位的，土地也不是一步到位的，但是土地可以预支一些，人口到了1000万给多少，人口到了2000万给多少，就是“爬行盯住”的过程。但是不再是中小城市宽松供地，大型城市紧俏供地的逆向调控，这样就不会出现西部一些小地方只有那么两三百万人，但是给了五六百平方公里的城市空间。我们都知道一个人平均一万平方米，一百万人就是一百平方公里的城市，给多了就是浪费土地资源。在这个意义上，中西部中等小城市土地要给，也应该鼓励支持，但不能鼓励泡沫，不能鼓励成空心化的结果。 反过来，上面说的三种热点地区，土地当然要正向地给予积极的鼓励。有的城市现在都接近2000万人了，城市建成区面积才1000多平方公里，所以就会出现地价特别高。比如深圳，1980年才几十万人2亿GDP的时候就给2000平方公里，现在到了近2千万人2万多亿GDP了还是之前那些，显然供地不足，就要多划一点地给它。这是一个城市布局。我相信今后十几年，中国城市会实现按规划、按人口、按产业需要精准的供应土地，从而避免城市因土地短缺造成不合理的空间布局、因土地短缺而造成畸高的地价、因土地短缺而造成产业发展束缚。 我们过去城市发展的另一个问题就是农村的土地资源跟城市土地资源分裂，没有出现资源优化配置顺向的一种流动。全世界的城市化过程都是农业耕地增加的过程，而中国这40年农村的耕地是不断地减少，许多中国经济专家或者行政管理人员都会认为城市化过程不可阻挡地会让耕地减少，所以城市化必须非常节约用地。这也是中国房地产发生过程中土地地价不断涨高的一个原因。 为什么世界各国两百年城市化过程没有出现农村耕地减少，反而增加了呢？那是因为任何人在农村一般除了耕地以外，都会占用建设性用地，农村每人一般会占用250-300平方米左右。因为城市是高楼大厦，各方面比较集约节约，所以城市的人口人均建设性用地、城市化用地是100平方米，这个不管是欧洲、美国、中国，都一样。在这样的情况下，如果有1亿人进城，农村里面的建设性用地理论上可以减少250亿-300亿平方米，而城市里面需要扩大100亿平方米。在这样的过程中，一进一出扣抵后就会多出1万多平方公里的耕地。从这个角度看，城市化过程当然是一个农村的耕地、整个国家的耕地增加的过程。为什么中国这40年没出现这个状态呢？因为我们的农民是两头占地的，进城总要在工厂里工作，最终总要占地，人均100平方米是刚性的，所以我们有3亿多农民工在城里当然就增加了3万平方公里的城市化用地。但是农民进了城以后，在农村当地占用的建设性用地，人均300平方米土地并不退出，城里占100平方米，农村占300平方米，两头都占，这样就出现了中国城市化进程耕地只减不增的特殊现象。中国的耕地大体上是世界可耕地的9%，我们的人口是世界的20%，人均耕地是全球人均耕地的40%，我们的土地供应是不够的。所以城市化发展中，耕地不能再减少，这是一个底线要守住。这里面很重要的就是城市和农村的建设性用地资源调度占补平衡，如果城市征了1亿亩，农村的建设用地减少占用1亿亩，形成城乡之间建设用地增减挂钩、占补平衡，建设用地总量不变，总的耕地总量不变。 城乡的建设性用地占补平衡，进行资源优化配置，这就有一个地票问题。如果农民进城了，农村的宅基地没用了，这个房子占用了宅基地，深山中的老旧房子要卖也只能卖个几万元，但是把这个房子变成耕地，形成地票，一亩耕地的地票可以卖到二三十万，农民当然有积极性。农村里的房子也没人住了，把宅基地改造成为耕地，得到相应的一亩地地票，在地票交易所里面卖给各种大城市的开发商，它本来要征地批租的建设用地指标，不通过行政性的审批，而是买市场化的地票指标，买了以后再在自己的大城市里征地。这方面在过去10年，在一些省份已经有了一定的实践。这些省份在中心城市搞地票交易所，然后把农村里近30年来30万亩的宅基地变成了耕地，而房产商以二十几万一亩的价格买了这30多万亩的土地指标就在城里搞房地产开发，房地产开发的土地指标不受约束就能比较充分地供应，地价也不会太高。农村30万亩地，二十几万一亩就得到了六七百亿。这六七百亿就成为农民致富的一个重要资金来源。 在一些省做地票试验之后，现在国家已经把地票试验开始在全国范围配置。比如，2018年，西部的某个省把过去农村里的建设性用地，有的是闲置的宅基地、有的是农村闲置废弃小学或者农村闲置的一些仓库等，把它复垦为耕地。他们减少了这些建设性用地，增加了几万亩耕地。这几万亩地票，作为建设用地占补平衡的指标，由国土资源部配置给沿海大城市如上海、北京等等。这些城市按30万或50万一亩的价格拿出100多亿元买了几万亩建设用地的指标，沿海大城市房地产城市土地指标就宽松了。但是这100亿在资源配置中拨付给了西部，实现了大城市反哺大农村，西部就可以多了100亿搞发展的资金，这个资金不是给省市财政局，而是给了农村集体组织、给了农村的农民，这样也起到扶贫帮困的作用。应该说，城乡之间、东西部之间这种建设用地增减挂钩的地票式交易，形成一个市场化的资源配置。如果全国每年有几十万亩地票实现了占补平衡的交易，既会通过市场化资源优化配置，增加大城市土地供应，满足城市化发展的土地需求，又会形成大城市反哺大农村，每年几千亿，十年几万亿，成为城乡统筹改革的一个重要红利。我相信，过去10年探索的这件事，今后10年会变成中国城乡土地一体化发展的一个基础性的改革措施。 以上是六个主要趋势性的判断。这六个方面的趋势有土地供给、有企业供给、有成本价格的供给、有资本货币的供给。总的来说，供给侧的这些变化会影响社会方方面面、影响整个房地产其它各个枝枝节节的变化，因为它是根基型的、主干型的，它的变化会形成整个房地产业各个方面的变化。","tags":[{"name":"房价","slug":"房价","permalink":"https://PureBlueFrank.github.io/tags/房价/"}]}]